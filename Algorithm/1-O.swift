//
//  1-O.swift
//  Algorithm
//  BaekJoon 4375
//  Created by Yong Jun Cha on 2023/03/09.
//

/**
 2와 5로 나누어 떨어지지 않는다라는 말은
 짝수가 아니고 10의 배수가 아니라는 것이다.
 
 1로만 이루어진 n의 배수를 찾는다
 ex) 111 % n == 0 이 나와야 한다
 
 3
 7
 9901
 
 111 이 3으로 나누어 떨어지는 최소의 1로만 이루어진 수이다.
 그리고 3자리기 때문에 출력이 3이다.
 
 111111 이 7로 나누어 떨어지는 최소의 1로만 이루어진 수이다.
 그리고 6자리 이기 때문에 출력이 6이다.
 
 111111111111 이 9901으로 나누어 떨어지는 최소의 1로만 이루어진 수이다.
 그리고 12자리기 때무에 출력이 12이다.
 
 안 나누어 떨어질 때 마다 1x10n만큼 더하면 문제를 해결할 수 있지 않을까
 우선 입력 보다는 큰 자리수의 1111을 해야한다.
 
 재귀로 1, 10, 100, 1000, 10000 이런 식으로 확인하다가 답이 나오면 재귀를 멈추고 그 답을 리턴하는 시스템이 있으면 좋겠다
 
 못푼 이유
 나머지 연산을 전 문제에서 경험했음에도 불구하고 할 생각을 못했다.
 ex) ( a + b ) % b = ( a % b + a % b ) % b 와 같다
 따라서 마지막에 한 번 나머지 연산을 한 번 하려고 하면 값도 엄청 커지고 CLongLong 범위를 넘어가는데
 각각 순서마다 나머지 연산을 해서 넘기면 답을 구할 수 있다.
 생각의 순서는 맞았으나 재귀로 접근하려고 했고 while문을 정확히 언제 써야할지 잘 몰랐던 것 같다.
 
 그리고 여기서 처음 무한 입력문제를 풀었는데 1주차 복습 때 잘 외워야 겠다.
 */

while let line = Int(readLine() ?? "") {
    
    var cnt: Int = 1
    var answer: Int = 1
    
    while true  {
        if cnt % line == 0 {
            print("\(answer)")
            break
        } else {
            cnt = cnt * 10 + 1
            cnt = cnt % line
            answer += 1
        }
    }
}

